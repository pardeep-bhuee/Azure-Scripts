Get-Date

$ErrorActionPreference = "Stop"

# need to have "RunAsConnection privileges when creating automation account"
$connectionName = "AzureRunAsConnection"
try
{
	# Get the connection "AzureRunAsConnection "
	$servicePrincipalConnection=Get-AutomationConnection -Name $connectionName         
	
	# Add account
	Add-AzureRmAccount `
		-ServicePrincipal `
		-TenantId $servicePrincipalConnection.TenantId `
		-ApplicationId $servicePrincipalConnection.ApplicationId `
		-CertificateThumbprint $servicePrincipalConnection.CertificateThumbprint 


	"Selecting Azure subscription..."
	Select-AzureRmSubscription -SubscriptionId $servicePrincipalConnection.SubscriptionID -TenantId $servicePrincipalConnection.tenantid 
}
catch {
	if (!$servicePrincipalConnection)
	{
		$ErrorMessage = "Connection $connectionName not found."
		throw $ErrorMessage
	} else{
		Write-Error -Message $_.Exception
		throw $_.Exception
	}
}

# validate connection
Write-Output "AzureRunAsConnection: Done."

# Populate storage details
$StorageAccountName = 'sqlbackupsaccount'
$ContainerName = 'bacpacs'
$StorageKeytype = 'StorageAccessKey'
$StorageAccount = Get-AzureRmStorageAccount | ? StorageAccountName -EQ $StorageAccountName

# output storage account details
$StorageAccount

# get storage account access key
Write-Output "Attempting to get Storage Account Key"
$StorageAccountKeys = Get-AzureRmStorageAccountKey -ResourceGroupName $StorageAccount.ResourceGroupName -Name $StorageAccount.StorageAccountName
Write-Output "Successfully Obtained Storage Key"

# store storage access key
$StorageAccountKey = $StorageAccountKeys[0].Value 
$StorageContext = New-AzureStorageContext -StorageAccountName $storageAccount.StorageAccountName -StorageAccountKey $StorageAccountKey 

# getting storage details section of script complete
Write-Output "Storage: Done."


# get db details that are stored in variables section.  This is in the from of JSON

#[
#    {
#        "ResourceGroupName":  "rg-name",
#        "ServerName":  "sql-server-name",
#        "DatabaseName":  "db-name",
#        "Password":  "db-password",
#        "UserName":  "db-user"
#    }
#]    

$DatabaseConfigurations = Get-AutomationVariable -Name 'AzureSqlDatabaseExportConfiguration' | ConvertFrom-Json

# loop through and export to storage

ForEach ($DatabaseConfiguration in $DatabaseConfigurations) {
    
    $DatabaseConfiguration.DatabaseName  

    $TheBlobName = (Get-Date -Format 'yyyy-MM-dd-') + $DatabaseConfiguration.DatabaseName + '.bacpac'
    $TheBlob = Get-AzureStorageBlob -Context $StorageContext -Container $ContainerName | ? Name -eq $TheBlobName
    $BacpacUri = "https://$StorageAccountName.blob.core.windows.net/$ContainerName/$TheBlobName"

    If (-Not $TheBlob) {
        $DatabaseConfigurationPassword = $DatabaseConfiguration.Password | ConvertTo-SecureString -AsPlainText -Force
         $exportRequest = New-AzureRmSqlDatabaseExport `
	        -ResourceGroupName $DatabaseConfiguration.ResourceGroupName `
	        -ServerName $DatabaseConfiguration.ServerName `
	        -DatabaseName $DatabaseConfiguration.DatabaseName `
	        -StorageKeytype $StorageKeytype `
	        -StorageKey $StorageAccountKey `
	        -StorageUri $BacpacUri `
	        -AdministratorLogin $DatabaseConfiguration.UserName `
	        -AdministratorLoginPassword $DatabaseConfigurationPassword
            
        $exportStatus = Get-AzureRmSqlDatabaseImportExportStatus -OperationStatusLink $exportRequest.OperationStatusLink        
        $exportStatus
    }
}

# confirmation
Write-Output "All Done"

Get-Date
